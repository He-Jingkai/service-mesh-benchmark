variable "cluster_name" {}
variable "facility" {}
variable "ssh_pubkey" {}
variable "packet_project_id" {}
variable "public_eip" {}
variable "route53_zone" {}
variable "route53_zone_id" {}
variable "aws_access_key_id" {}
variable "aws_secret_access_key" {}


cluster "packet" {
  project_id   = var.packet_project_id
  cluster_name = var.cluster_name
  facility     = var.facility
  ssh_pubkeys = [
    var.ssh_pubkey
  ]

  controller_type      = "t1.small.x86"
  asset_dir            = "./assets"
  controller_count     = 1
  management_cidrs     = ["0.0.0.0/0"]
  node_private_cidr    = "10.0.0.0/8"
  ignore_x509_cn_check = true


  dns {
    zone     = var.route53_zone
    provider = "route53"
  }

  worker_pool "workload" {
    count     = 6
    node_type = "m2.xlarge.x86"
    labels    = "role=workload"
  }

  worker_pool "benchmark" {
    count     = 1
    node_type = "m2.xlarge.x86"
    labels    = "role=benchmark"
  }
}

component "openebs-operator" {}

component "openebs-storage-class" {
  storage-class "openebs-test-sc" {
    replica_count = 1
    default       = true
  }
}

component "prometheus-operator" {
  prometheus {
    watch_labeled_service_monitors = "false"
    watch_labeled_prometheus_rules = "false"
    storage_size                   = "100Gi"
    ingress {
      host = "prometheus.${var.cluster_name}.${var.route53_zone}"
    }
    external_labels = {
      "cluster" = var.cluster_name
    }
  }
}

component "metrics-server" {}

component "experimental-istio-operator" {
  enable_monitoring = true
}

component "experimental-linkerd" {
  enable_monitoring = true
}


component "contour" {
  enable_monitoring = true
}

component "metallb" {
  address_pools = {
    default = [var.public_eip]
  }
  service_monitor = true
}

component "cert-manager" {
  namespace       = "cert-manager"
  email           = "suraj@kinvolk.io"
  webhooks        = "true"
  service_monitor = "true"
}


component "external-dns" {
  policy   = "sync"
  owner_id = var.cluster_name
  aws {
    zone_id               = var.route53_zone_id
    aws_access_key_id     = var.aws_access_key_id
    aws_secret_access_key = var.aws_secret_access_key
  }

  service_monitor = true
}
