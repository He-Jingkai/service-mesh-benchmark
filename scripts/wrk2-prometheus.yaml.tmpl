apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: benchmark-data-plane
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1337
    rule: MustRunAs
  readOnlyRootFilesystem: false
  allowedCapabilities:
  - NET_ADMIN
  - NET_RAW
  - NET_BIND_SERVICE
  - KILL
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 10001
    rule: MustRunAs
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
  - persistentVolumeClaim
---

apiVersion: v1
kind: Namespace
metadata:
  name: wrk2-prometheus
  annotations:
    linkerd.io/inject: enabled
---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: benchmark-psp
  namespace: wrk2-prometheus
rules:
- apiGroups: ['policy','extensions']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames: ['benchmark-data-plane']
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: benchmark-psp
  namespace: wrk2-prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: benchmark-psp
subjects:
- kind: ServiceAccount
  name: default
  namespace: wrk2-prometheus
---

apiVersion: batch/v1
kind: Job
metadata:
  name: wrk2-prometheus
  namespace: wrk2-prometheus
  labels:
    jobgroup: wrk2-prometheus
  annotations:
    linkerd.io/inject: enabled
spec:
  template:
    metadata:
      name: wrk2-prometheus
      labels:
        jobgroup: wrk2-prometheus
        app: wrk2-prometheus
        custom-affinity: load-generator-node
    spec:
      restartPolicy: Never
      securityContext:
        runAsUser: 10001
      tolerations:
      - effect: NoSchedule
        key: load-generator-node
        operator: Exists
      volumes:
      - name: tempfs
        emptyDir:
          medium: Memory
      shareProcessNamespace: true
      containers:
      - name: wrk2-prometheus
        image: quay.io/kinvolk/wrk2-prometheus
        imagePullPolicy: Always
        volumeMounts:
        - name: tempfs
          mountPath: "/tmpfs"
        args:
        - -p
        - "${PUSHGW}"
        - -c
        - "${CONNECTIONS}"
        - -d
        - "${DURATION}"
        - -r
        - "${RPS}"
${ENDPOINTS}
